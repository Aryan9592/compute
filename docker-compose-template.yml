{% set players = num_players | int %}
{% if network is not defined or network == "localhost" %}
  {% set network = "localhost" %}
  {% set mnemonic = "donor rather all fix tongue poverty camera oxygen have length thumb beach" %}
  {% set host = "hardhatnet" %}
  {% set port = "8545" %}
  {% set provider = "http://hardhatnet:8545" %}
  {% set semaphore = "http://hardhatnet:8545" %}
{% else %}
  {% set mnemonic = "${MNEMONIC}" %}
  {% if network == "matic_testnet" %}
    {% set host = "rpc-mumbai.matic.today" %}
    {% set port = "443" %}
    {% set provider = "https://rpc-mumbai.matic.today" %}
    {% set semaphore = "https://rpc-mumbai.matic.today" %}
  {% elif network == "bsc_testnet" %}
    {% set host = "data-seed-prebsc-1-s1.binance.org" %}
    {% set port = "8545" %}
    {% set provider = "https://data-seed-prebsc-1-s1.binance.org:8545" %}
    {% set semaphore = "https://data-seed-prebsc-1-s1.binance.org:8545" %}
  {% elif network == "avax_testnet" %}
    {% set host = "api.avax-test.network" %}
    {% set port = "443" %}
    {% set provider = "https://api.avax-test.network/ext/bc/C/rpc" %}
    {% set semaphore = "https://api.avax-test.network/ext/bc/C/rpc" %}
  {% else %}
    # other networks (e.g., goerli, rinkeby, kovan) are assumed to be accessible via Infura
    {% set host = network~".infura.io" %}
    {% set port = "443" %}
    {% set provider = "https://"~network~".infura.io/v3/${PROJECT_ID}" %}
    {% set semaphore = "https://infura.io" %}
  {% endif %}
{% endif %}

version: '3'
services:
{% if network == "localhost" %}
  hardhatnet:
    build:
      context: .
      dockerfile: ./deployer/Dockerfile
    environment:
      MNEMONIC: "{{ mnemonic }}"
    expose:
      - {{ port }}
    ports:
      - {{ port }}:{{ port }}
    volumes:
      - ./:/opt/cartesi/share/blockchain
    networks:
      - ethereum
{% endif %}
  
{% for i in range(players) %}
  dispatcher_{{ i }}:
    image: {{ image |default("cartesi/descartes:local", true) }}
    restart: always
    environment:
      MNEMONIC: "{{ mnemonic }}"
      ACCOUNT_INDEX: "{{ i }}"
      RUST_LOG: dispatcher=info,transaction=info,configuration=trace,utils=trace,state=info,descartes=trace
      WEB3_PROVIDER_URI: {{ provider }}
      DEPLOYMENT_SEMAPHORE: {{ semaphore }}
      ETHEREUM_HOST: {{ host }}
      ETHEREUM_PORT: {{ port }}
      ETHEREUM_NETWORK: {{ network }}
      QUERY_PORT: 3001
      MACHINE_MANAGER_HOST: machine-manager
      MACHINE_MANAGER_PORT: 50051
      LOGGER_HOST: logger
      LOGGER_PORT: 50051
      IPFS_HOST: ipfs
      IPFS_PORT: 50051
      DOCKER: "TRUE"
      RUST_BACKTRACE: 1
    volumes:
{% if network == "localhost" %}
      # remove deployments mapping to use supported testnets' deployment info
      - ./deployments:/opt/cartesi/share/blockchain/deployments:ro
{% endif %}    
      - ./dapp_data_{{ i }}/flashdrive:/opt/cartesi/srv/descartes/flashdrive
    networks:
      ethereum: {}
      node_{{ i }}:
        
        aliases:
          - dispatcher
    ports:
      - "{{ 3001 + i }}:3001"

  logger_{{ i }}:
    image: cartesi/logger-server:0.7.0
{% if network == "localhost" %}
    command: [ "-c", "/opt/cartesi/share/blockchain/deployments/localhost/Logger.json", "-d", "/opt/cartesi/srv/descartes/flashdrive"]
{% else %}    
    command: [ "-c", "/opt/cartesi/share/blockchain/node_modules/@cartesi/logger/deployments/{{ network }}/Logger.json", "-d", "/opt/cartesi/srv/descartes/flashdrive"]
{% endif %}    
    volumes:
{% if network == "localhost" %}
      # remove deployments mapping to use supported testnets' deployment info
      - ./deployments:/opt/cartesi/share/blockchain/deployments:ro
{% endif %}    
      - ./dapp_data_{{ i }}/flashdrive:/opt/cartesi/srv/descartes/flashdrive
    environment:
      MNEMONIC: "{{ mnemonic }}"
      ACCOUNT_INDEX: "{{ i }}"
      WEB3_PROVIDER_URI: {{ provider }}
      DEPLOYMENT_SEMAPHORE: {{ semaphore }}
    networks:
      ethereum: {}
      node_{{ i }}:
        aliases:
          - logger

  ipfs_{{ i }}:
    image: cartesi/ipfs-server:0.2.0
    volumes:
      - ./dapp_data_{{ i }}:/opt/cartesi/srv/descartes
    networks:
      ipfs: {}
      node_{{ i }}:
        aliases:
          - ipfs
    ports:
        - "{{ 50051 + i }}:50051"

  machine_manager_{{ i }}:
    image: cartesi/machine-manager:0.5.0
    volumes:
      - ./machines:/opt/cartesi/srv/descartes/cartesi-machine
      - ./dapp_data_{{ i }}/flashdrive:/opt/cartesi/srv/descartes/flashdrive
    networks:
      ethereum: {}
      node_{{ i }}:
        aliases:
          - machine-manager
{% endfor %}

volumes:
  {% for i in range(players) %}dapp_data_{{ i }}:
  {% endfor %}

networks:
  ipfs:
    name: ipfs
  ethereum:
  {% for i in range(players) %}node_{{ i }}:
  {% endfor %}
